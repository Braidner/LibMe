!function(){"use strict";function e(e){"ngInject";e.activeTab="/",e.$on("$routeChangeStart",function(t,i){i.$$route&&(e.activeTab=i.$$route.originalPath)})}function t(e,t){"ngInject";e.otherwise({redirectTo:"/"}),t.html5Mode(!0)}function i(e){"ngInject";function t(t){var i,n=$(".menu-indicator"),o=$(".active-menu").index();i=e.tabs[t.index],o>t.index?(n.removeClass("right"),n.addClass("left"),n.css({left:i.left}),n.css({right:i.right})):(n.removeClass("left"),n.addClass("right"),n.css({right:i.right}),n.css({left:i.left}))}e.$on("$routeChangeStart",function(i,n){var o=$("menu ul").width();$("menu ul li").each(function(i,n){var r=$(n).outerWidth(),l=e.tabs[i];if(l.index=i,0===i)l.left=0,l.right=o-r;else{var a=e.tabs[i-1];l.left=o-a.right,l.right=a.right-r}e.activeTab.indexOf(l.id)>-1&&t(l)})}),e.tabs=[new n("/","Все"),new n("/film","Фильмы"),new n("/serial","Сериалы"),new n("/anime","Аниме"),new n("/other","Прочее")],e.selectTab=t}function n(e,t,i){this.id=e,this.name=t,this.selected=i}t.$inject=["$routeProvider","$locationProvider"],e.$inject=["$rootScope"],i.$inject=["$scope"],angular.module("App",["ngRoute","ngAnimate","ContentModule","ContentCardModule","ItemModule","RecentModule"]).config(t).run(e).controller("NavigationCtrl",i),n.prototype={id:"",name:"",selected:!1},angular.module("App").directive("background",function(){return function(e,t,i){var n=i.background;t.css({"background-image":"url("+n+")","background-size":"cover"})}})}(),function(){function e(e){"ngInject";e.when("/",{templateUrl:"/app/content/content.html",controller:"AllContentCtrl"}).when("/film",{templateUrl:"/app/content/content.html",controller:"FilmContentCtrl"}).when("/serial",{templateUrl:"/app/content/content.html",controller:"SerialContentCtrl"})}function t(e){"ngInject";e.content=[{type:"film",id:1,name:"Batman v Superman: Dawn of Justice",poster:"http://www.kinopoisk.ru/images/film_big/770631.jpg"},{type:"serial",id:1,name:"The flash",poster:"http://www.kinopoisk.ru/images/film_big/817506.jpg"},{type:"film",id:1,name:"The Justice League Part One",poster:"http://www.kinopoisk.ru/images/film_big/424994.jpg"},{type:"film",id:1,name:"Untitled Spider-Man Reboot",poster:"http://www.kinopoisk.ru/images/film_big/690593.jpg"},{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"}]}function i(e){"ngInject";e.content=[{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"},{type:"film",id:1,name:"Batman v Superman: Dawn of Justice",poster:"http://www.kinopoisk.ru/images/film_big/770631.jpg"},{type:"serial",id:1,name:"The flash",poster:"http://www.kinopoisk.ru/images/film_big/817506.jpg"},{type:"film",id:1,name:"The Justice League Part One",poster:"http://www.kinopoisk.ru/images/film_big/424994.jpg"},{type:"film",id:1,name:"Untitled Spider-Man Reboot",poster:"http://www.kinopoisk.ru/images/film_big/690593.jpg"},{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"},{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"},{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"},{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"},{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"},{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"},{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"}]}function n(e){"ngInject";e.content=[{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"},{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"},{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"},{type:"film",id:1,name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"}]}e.$inject=["$routeProvider"],t.$inject=["$scope"],n.$inject=["$scope"],i.$inject=["$scope"],angular.module("ContentModule",["ContentServices"]).config(e).controller("AllContentCtrl",t).controller("SerialContentCtrl",n).controller("FilmContentCtrl",i)}(),function(){function e(){}angular.module("ContentServices",[]).service("ContentService",e)}(),function(){function e(e){"ngInject";e.when("/film/:content_id",{templateUrl:"/app/content-card/content-card.html",controller:"FilmCardCtrl"}).when("/serial/:content_id",{templateUrl:"/app/content-card/content-card.html",controller:"SerialCardCtrl"})}function t(){"ngInject"}function i(){"ngInject"}e.$inject=["$routeProvider"],angular.module("ContentCardModule",[]),angular.module("ContentCardModule").config(e).controller("FilmCardCtrl",t).controller("SerialCardCtrl",i)}(),function(){function e(e){"ngInject";function t(t,i,n){i.on("click",function(i){console.log("/"+t.item.type+"/"+t.item.id),e.path("/"+t.item.type+"/"+t.item.id),t.$apply()})}return{link:t,restrict:"E",replace:!0,scope:{item:"="},templateUrl:"/app/item/item.html"}}angular.module("ItemModule",[]).directive("contentItem",e),e.$inject=["$location"]}(),function(){"use strict";function e(e){"ngInject";e.content=[{name:"Frozen",poster:"http://www.kinopoisk.ru/images/film_big/493208.jpg"},{name:"Batman v Superman: Dawn of Justice",poster:"http://www.kinopoisk.ru/images/film_big/770631.jpg"},{name:"The flash",poster:"http://www.kinopoisk.ru/images/film_big/817506.jpg"},{name:"The Justice League Part One",poster:"http://www.kinopoisk.ru/images/film_big/424994.jpg"},{name:"Batman v Superman: Dawn of Justice",poster:"http://www.kinopoisk.ru/images/film_big/770631.jpg"},{name:"Untitled Spider-Man Reboot",poster:"http://www.kinopoisk.ru/images/film_big/690593.jpg"}]}angular.module("RecentModule",[]).controller("RecentCtrl",e),e.$inject=["$scope"],angular.module("RecentModule").directive("owlCarousel",function(){var e=function(e,t,i){var n=function(){t.owlCarousel({items:6,itemsDesktop:[1300,5]})};e.$watchCollection(i.owlCarousel,function(){n()})};return{restrict:"A",link:e}})}(),function(){"use strict"}();
//# sourceMappingURL=data:application/json;base64,
